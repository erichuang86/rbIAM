{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Overview \u00b6 When using Amazon Elastic Kubernetes Service ( EKS ) you will at some point ask yourself: how does AWS Identity and Access Management ( IAM ) and Kubernetes Role-based access control ( RBAC ) play together. Do they overlap? Are they complementary? Are there dependencies. rbIAM aims to help you navigate this space. Motivation \u00b6 Let's have a look at a concrete example, for motivation. Take the Fluent Bit output plugin for Amazon Kinesis Data Firehose . In Centralized Container Logging with Fluent Bit we described how to use it. The setup, in a nutshell, is as follows: The Fluent Bit is deployed as a DaemonSet as per eks-fluent-bit-daemonset.yaml and: depends on an IAM policy, defined in eks-fluent-bit-daemonset-policy.json , giving it the permissions to write to the Kinesis Data Firehose, manage log streams in CloudWatch, etc., as well as a Kubernetes role, defined in eks-fluent-bit-daemonset-rbac.yaml , giving it the permissions to list and query pods and namespaces, in the cluster, so that it can receive the logs from the containers. Terminology \u00b6 IAM \u00b6 Principal, role, policy, STS RBAC \u00b6 User, service account, role, role binding","title":"Home"},{"location":"#overview","text":"When using Amazon Elastic Kubernetes Service ( EKS ) you will at some point ask yourself: how does AWS Identity and Access Management ( IAM ) and Kubernetes Role-based access control ( RBAC ) play together. Do they overlap? Are they complementary? Are there dependencies. rbIAM aims to help you navigate this space.","title":"Overview"},{"location":"#motivation","text":"Let's have a look at a concrete example, for motivation. Take the Fluent Bit output plugin for Amazon Kinesis Data Firehose . In Centralized Container Logging with Fluent Bit we described how to use it. The setup, in a nutshell, is as follows: The Fluent Bit is deployed as a DaemonSet as per eks-fluent-bit-daemonset.yaml and: depends on an IAM policy, defined in eks-fluent-bit-daemonset-policy.json , giving it the permissions to write to the Kinesis Data Firehose, manage log streams in CloudWatch, etc., as well as a Kubernetes role, defined in eks-fluent-bit-daemonset-rbac.yaml , giving it the permissions to list and query pods and namespaces, in the cluster, so that it can receive the logs from the containers.","title":"Motivation"},{"location":"#terminology","text":"","title":"Terminology"},{"location":"#iam","text":"Principal, role, policy, STS","title":"IAM"},{"location":"#rbac","text":"User, service account, role, role binding","title":"RBAC"}]}